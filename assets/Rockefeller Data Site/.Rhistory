g0[i] <- g0[1]*exp(mu*(i-1)*dt)
h[i] <- h[1]*exp((mu0-sigma0^2/2)*(i-1)*dt+sigma0*f[i])
h0[i] <- h0[1]*exp(mu0*(i-1)*dt)
o_range <- range(f,g,g0,h,h0)
plot(timeline,f, ylim=o_range, type="l", col="coral1")
lines(timeline,g0, col="chartreuse3")
lines(timeline,g, col="chartreuse2")
lines(timeline,h, col="deepskyblue1")
lines(timeline,h0, col="deepskyblue3")
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1);
}
}interval = 0.1, ani.width = 550, ani.height = 350)
library(animation)
maturity <- 15
simulation.length <- 10001
dt <-  maturity/(simulation.length-1)
timeline <- seq(0,maturity, dt)
S0<-1
r<-0.05
mu<-0.1
mu0<-0.2
sigma<-0.2
sigma0<-0.375
f <- g <- g0 <- h <- h0 <- rep(0, times=simulation.length)
g0[1] <- h0[1] <- g[1] <-  h[1] <- S0
saveGIF({
for(i in 2:simulation.length){
f[i] <- f[i-1]+sqrt(dt)*rnorm(1)
g[i] <- g[1]*exp((mu-(sigma^2)/2)*(i-1)*dt+sigma*f[i])
g0[i] <- g0[1]*exp(mu*(i-1)*dt)
h[i] <- h[1]*exp((mu0-sigma0^2/2)*(i-1)*dt+sigma0*f[i])
h0[i] <- h0[1]*exp(mu0*(i-1)*dt)
o_range <- range(f,g,g0,h,h0)
plot(timeline,f, ylim=o_range, type="l", col="coral1")
lines(timeline,g0, col="chartreuse3")
lines(timeline,g, col="chartreuse2")
lines(timeline,h, col="deepskyblue1")
lines(timeline,h0, col="deepskyblue3")
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1);
}
},interval = 0.1, ani.width = 550, ani.height = 350)
saveGIF({
for(i in seq(2,simulation.length, by = 100){
f[i] <- f[i-1]+sqrt(dt)*rnorm(1)
g[i] <- g[1]*exp((mu-(sigma^2)/2)*(i-1)*dt+sigma*f[i])
g0[i] <- g0[1]*exp(mu*(i-1)*dt)
h[i] <- h[1]*exp((mu0-sigma0^2/2)*(i-1)*dt+sigma0*f[i])
h0[i] <- h0[1]*exp(mu0*(i-1)*dt)
o_range <- range(f,g,g0,h,h0)
plot(timeline,f, ylim=o_range, type="l", col="coral1")
lines(timeline,g0, col="chartreuse3")
lines(timeline,g, col="chartreuse2")
lines(timeline,h, col="deepskyblue1")
lines(timeline,h0, col="deepskyblue3")
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1);
}
},interval = 0.1, ani.width = 550, ani.height = 350)
library(animation)
maturity <- 15
simulation.length <- 10001
dt <-  maturity/(simulation.length-1)
timeline <- seq(0,maturity, dt)
S0<-1
r<-0.05
mu<-0.1
mu0<-0.2
sigma<-0.2
sigma0<-0.375
f <- g <- g0 <- h <- h0 <- rep(0, times=simulation.length)
g0[1] <- h0[1] <- g[1] <-  h[1] <- S0
saveGIF({
for(i in seq(2,simulation.length, by = 100)){
f[i] <- f[i-1]+sqrt(dt)*rnorm(1)
g[i] <- g[1]*exp((mu-(sigma^2)/2)*(i-1)*dt+sigma*f[i])
g0[i] <- g0[1]*exp(mu*(i-1)*dt)
h[i] <- h[1]*exp((mu0-sigma0^2/2)*(i-1)*dt+sigma0*f[i])
h0[i] <- h0[1]*exp(mu0*(i-1)*dt)
o_range <- range(f,g,g0,h,h0)
plot(timeline,f, ylim=o_range, type="l", col="coral1")
lines(timeline,g0, col="chartreuse3")
lines(timeline,g, col="chartreuse2")
lines(timeline,h, col="deepskyblue1")
lines(timeline,h0, col="deepskyblue3")
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1);
}
},interval = 0.1, ani.width = 550, ani.height = 350)
saveGIF({
for(i in seq(2,simulation.length, by = 100)){
f[i] <- f[i-1]+sqrt(dt)*rnorm(1)
g[i] <- g[1]*exp((mu-(sigma^2)/2)*(i-1)*dt+sigma*f[i])
g0[i] <- g0[1]*exp(mu*(i-1)*dt)
h[i] <- h[1]*exp((mu0-sigma0^2/2)*(i-1)*dt+sigma0*f[i])
h0[i] <- h0[1]*exp(mu0*(i-1)*dt)
o_range <- range(f,g,g0,h,h0)
plot(timeline,f[1:i], ylim=o_range, type="l", col="coral1")
lines(timeline,g0[1:i], col="chartreuse3")
lines(timeline,g[1:i], col="chartreuse2")
lines(timeline,h[1:i], col="deepskyblue1")
lines(timeline,h0[1:i], col="deepskyblue3")
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1);
}
},interval = 0.1, ani.width = 550, ani.height = 350)
library(animation)
maturity <- 15
simulation.length <- 10001
dt <-  maturity/(simulation.length-1)
timeline <- seq(0,maturity, dt)
S0<-1
r<-0.05
mu<-0.1
mu0<-0.2
sigma<-0.2
sigma0<-0.375
f <- g <- g0 <- h <- h0 <- rep(0, times=simulation.length)
g0[1] <- h0[1] <- g[1] <-  h[1] <- S0
saveGIF({
for(i in seq(2,simulation.length, by = 100)){
f[i] <- f[i-1]+sqrt(dt)*rnorm(1)
g[i] <- g[1]*exp((mu-(sigma^2)/2)*(i-1)*dt+sigma*f[i])
g0[i] <- g0[1]*exp(mu*(i-1)*dt)
h[i] <- h[1]*exp((mu0-sigma0^2/2)*(i-1)*dt+sigma0*f[i])
h0[i] <- h0[1]*exp(mu0*(i-1)*dt)
o_range <- range(f,g,g0,h,h0)
plot(timeline[1:i],f[1:i], ylim=o_range, type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1);
}
},interval = 0.1, ani.width = 550, ani.height = 350)
saveGIF({
for(i in seq(2,simulation.length, by = dt)){
f[i] <- f[i-1]+sqrt(dt)*rnorm(1)
g[i] <- g[1]*exp((mu-(sigma^2)/2)*(i-1)*dt+sigma*f[i])
g0[i] <- g0[1]*exp(mu*(i-1)*dt)
h[i] <- h[1]*exp((mu0-sigma0^2/2)*(i-1)*dt+sigma0*f[i])
h0[i] <- h0[1]*exp(mu0*(i-1)*dt)
o_range <- range(f,g,g0,h,h0)
plot(timeline[1:i],f[1:i], ylim=o_range, type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1);
}
},interval = 0.1, ani.width = 550, ani.height = 350)
maturity <- 15
simulation.length <- 10001
dt <-  maturity/(simulation.length-1)
timeline <- seq(0,maturity, dt)
S0<-1
r<-0.05
mu<-0.1
mu0<-0.2
sigma<-0.2
sigma0<-0.375
f <- g <- g0 <- h <- h0 <- rep(0, times=simulation.length)
g0[1] <- h0[1] <- g[1] <-  h[1] <- S0
saveGIF({
for(i in seq(2,simulation.length, by = dt)){
f[i] <- f[i-1]+sqrt(dt)*rnorm(1)
g[i] <- g[1]*exp((mu-(sigma^2)/2)*(i-1)*dt+sigma*f[i])
g0[i] <- g0[1]*exp(mu*(i-1)*dt)
h[i] <- h[1]*exp((mu0-sigma0^2/2)*(i-1)*dt+sigma0*f[i])
h0[i] <- h0[1]*exp(mu0*(i-1)*dt)
o_range <- range(f,g,g0,h,h0)
plot(timeline[1:i],f[1:i], ylim=o_range, type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1);
}
},interval = 0.1, ani.width = 550, ani.height = 350)
saveGIF({
for(i in 2:simulation.length)){
f[i] <- f[i-1]+sqrt(dt)*rnorm(1)
g[i] <- g[1]*exp((mu-(sigma^2)/2)*(i-1)*dt+sigma*f[i])
g0[i] <- g0[1]*exp(mu*(i-1)*dt)
h[i] <- h[1]*exp((mu0-sigma0^2/2)*(i-1)*dt+sigma0*f[i])
h0[i] <- h0[1]*exp(mu0*(i-1)*dt)
o_range <- range(f,g,g0,h,h0)
plot(timeline[1:i],f[1:i], ylim=o_range, type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1);
}
},interval = 0.01, ani.width = 550, ani.height = 350)
saveGIF({
for(i in 2:simulation.length)){
f[i] <- f[i-1]+sqrt(dt)*rnorm(1)
g[i] <- g[1]*exp((mu-(sigma^2)/2)*(i-1)*dt+sigma*f[i])
g0[i] <- g0[1]*exp(mu*(i-1)*dt)
h[i] <- h[1]*exp((mu0-sigma0^2/2)*(i-1)*dt+sigma0*f[i])
h0[i] <- h0[1]*exp(mu0*(i-1)*dt)
o_range <- range(f,g,g0,h,h0)
plot(timeline[1:i],f[1:i], ylim=o_range, type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1)
}
},interval = 0.01, ani.width = 550, ani.height = 350)
library(animation)
maturity <- 15
simulation.length <- 10001
dt <-  maturity/(simulation.length-1)
timeline <- seq(0,maturity, dt)
S0<-1
r<-0.05
mu<-0.1
mu0<-0.2
sigma<-0.2
sigma0<-0.375
f <- g <- g0 <- h <- h0 <- rep(0, times=simulation.length)
g0[1] <- h0[1] <- g[1] <-  h[1] <- S0
saveGIF({
for(i in 2:simulation.length){
f[i] <- f[i-1]+sqrt(dt)*rnorm(1)
g[i] <- g[1]*exp((mu-(sigma^2)/2)*(i-1)*dt+sigma*f[i])
g0[i] <- g0[1]*exp(mu*(i-1)*dt)
h[i] <- h[1]*exp((mu0-sigma0^2/2)*(i-1)*dt+sigma0*f[i])
h0[i] <- h0[1]*exp(mu0*(i-1)*dt)
o_range <- range(f,g,g0,h,h0)
plot(timeline[1:i],f[1:i], ylim=o_range, type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1)
}
},interval = 0.01, ani.width = 550, ani.height = 350)
saveGIF({
for(i in 2:simulation.length/100){
f[i] <- f[i-1]+sqrt(dt)*rnorm(1)
g[i] <- g[1]*exp((mu-(sigma^2)/2)*(i-1)*dt+sigma*f[i])
g0[i] <- g0[1]*exp(mu*(i-1)*dt)
h[i] <- h[1]*exp((mu0-sigma0^2/2)*(i-1)*dt+sigma0*f[i])
h0[i] <- h0[1]*exp(mu0*(i-1)*dt)
o_range <- range(f,g,g0,h,h0)
plot(timeline[1:i],f[1:i], ylim=o_range, type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1)
}
},interval = 0.01, ani.width = 550, ani.height = 350)
f <- g <- g0 <- h <- h0 <- rep(0, times=simulation.length)
g0[1] <- h0[1] <- g[1] <-  h[1] <- S0
saveGIF({
for(i in 2:simulation.length/100){
f[i] <- f[i-1]+sqrt(dt)*rnorm(1)
library(animation)
maturity <- 15
simulation.length <- 1000
dt <-  maturity/(simulation.length-1)
timeline <- seq(0,maturity, dt)
S0<-1
r<-0.05
mu<-0.1
mu0<-0.2
sigma<-0.2
sigma0<-0.375
f <- g <- g0 <- h <- h0 <- rep(0, times=simulation.length)
g0[1] <- h0[1] <- g[1] <-  h[1] <- S0
saveGIF({
for(i in 2:simulation.length){
f[i] <- f[i-1]+sqrt(dt)*rnorm(1)
g[i] <- g[1]*exp((mu-(sigma^2)/2)*(i-1)*dt+sigma*f[i])
g0[i] <- g0[1]*exp(mu*(i-1)*dt)
h[i] <- h[1]*exp((mu0-sigma0^2/2)*(i-1)*dt+sigma0*f[i])
h0[i] <- h0[1]*exp(mu0*(i-1)*dt)
o_range <- range(f,g,g0,h,h0)
plot(timeline[1:i],f[1:i], ylim=o_range, type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1)
}
},interval = 0.01, ani.width = 550, ani.height = 350)
library(animation)
maturity <- 15
simulation.length <- 1000
dt <-  maturity/(simulation.length-1)
timeline <- seq(0,maturity, dt)
S0<-1
r<-0.05
mu<-0.1
mu0<-0.2
sigma<-0.2
sigma0<-0.375
f <- g <- g0 <- h <- h0 <- rep(0, times=simulation.length)
g0[1] <- h0[1] <- g[1] <-  h[1] <- S0
saveGIF({
for(i in 2:simulation.length){
f[i] <- f[i-1]+sqrt(dt)*rnorm(1)
g[i] <- g[1]*exp((mu-(sigma^2)/2)*(i-1)*dt+sigma*f[i])
g0[i] <- g0[1]*exp(mu*(i-1)*dt)
h[i] <- h[1]*exp((mu0-sigma0^2/2)*(i-1)*dt+sigma0*f[i])
h0[i] <- h0[1]*exp(mu0*(i-1)*dt)
o_range <- range(f,g,g0,h,h0)
plot(timeline[1:i],f[1:i], ylim=o_range, type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1)
}
},interval = 0.01, ani.width = 550, ani.height = 350)
f <- g <- g0 <- h <- h0 <- rep(0, times=simulation.length)
g0[1] <- h0[1] <- g[1] <-  h[1] <- S0
for(i in 2:simulation.length){
f[i] <- f[i-1]+sqrt(dt)*rnorm(1)
g[i] <- g[1]*exp((mu-(sigma^2)/2)*(i-1)*dt+sigma*f[i])
g0[i] <- g0[1]*exp(mu*(i-1)*dt)
h[i] <- h[1]*exp((mu0-sigma0^2/2)*(i-1)*dt+sigma0*f[i])
h0[i] <- h0[1]*exp(mu0*(i-1)*dt)
}
o_range <- range(f,g,g0,h,h0)
plot(timeline, f, ylim = o_range, type = 'l', col = 'white')
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1)
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
saveGif({
for(i in seq(2, simulation.length, 10)){
plot(timeline[1:i],f[1:i], ylim=o_range, type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
}
},interval = 0.05, ani.width = 550, ani.height = 350)
animation::saveGif({
for(i in seq(2, simulation.length, 10)){
plot(timeline[1:i],f[1:i], ylim=o_range, type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
}
},interval = 0.05, ani.width = 550, ani.height = 350)
library(animation)
library(animation)
maturity <- 15
simulation.length <- 10001
dt <-  maturity/(simulation.length-1)
timeline <- seq(0,maturity, dt)
S0<-1
r<-0.05
mu<-0.1
mu0<-0.2
sigma<-0.2
sigma0<-0.375
f <- g <- g0 <- h <- h0 <- rep(0, times=simulation.length)
g0[1] <- h0[1] <- g[1] <-  h[1] <- S0
for(i in 2:simulation.length){
f[i] <- f[i-1]+sqrt(dt)*rnorm(1)
g[i] <- g[1]*exp((mu-(sigma^2)/2)*(i-1)*dt+sigma*f[i])
g0[i] <- g0[1]*exp(mu*(i-1)*dt)
h[i] <- h[1]*exp((mu0-sigma0^2/2)*(i-1)*dt+sigma0*f[i])
h0[i] <- h0[1]*exp(mu0*(i-1)*dt)
}
o_range <- range(f,g,g0,h,h0)
plot(timeline, f, ylim = o_range, type = 'l', col = 'white')
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1)
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
animation::saveGIF({
for(i in seq(2, simulation.length, 10)){
plot(timeline[1:i],f[1:i], ylim=o_range, type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
}
},interval = 0.05, ani.width = 550, ani.height = 350)
animation::saveGIF({
for(i in seq(2, simulation.length, 10)){
plot(timeline[1:i],f[1:i], ylim=o_range, type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
}
},interval = 0.1, ani.width = 550, ani.height = 350)
animation::saveGIF({
for(i in seq(2, simulation.length, 100)){
plot(timeline[1:i],f[1:i], ylim=o_range, type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
}
},interval = 0.1, ani.width = 550, ani.height = 350)
o_range <- range(f,g,g0,h,h0)
plot(timeline, f, ylim = o_range, xlim = c(0,15), type = 'l', col = 'white')
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1)
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
animation::saveGIF({
for(i in seq(2, simulation.length, 100)){
plot(timeline[1:i],f[1:i], type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
}
},interval = 0.1, ani.width = 550, ani.height = 350)
animation::saveGIF({
for(i in seq(2, simulation.length, 100)){
lines(timeline[1:i],f[1:i], type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
}
},interval = 0.1, ani.width = 550, ani.height = 350)
o_range <- range(f,g,g0,h,h0)
plot(timeline, f, ylim = o_range, xlim = c(0,15), type = 'l', col = 'white')
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1)
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
animation::saveGIF({
for(i in seq(2, simulation.length, 100)){
lines(timeline[1:i],f[1:i], type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
}
},interval = 0.1, ani.width = 550, ani.height = 350)
animation::saveGIF({
for(i in seq(2, simulation.length, 100)){
plot(timeline, f, col = 'white', ylim = o_range, xlim = c(0,15))
lines(timeline[1:i],f[1:i], type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
}
},interval = 0.1, ani.width = 550, ani.height = 350)
o_range <- range(f,g,g0,h,h0)
plot(timeline, f, ylim = o_range, xlim = c(0,15), type = 'l', col = 'white')
legend(1, o_range[2], c("mu = 0.2,  sigma = 0.375","mu = 0.1,  sigma = 0.2","Brownian motion"), cex=0.8,
col=c("deepskyblue1","chartreuse2","coral1"), pch=1, lty=1)
title(main="Geometric Brownian Motion trajectories", col.main="red", font.main=4)
animation::saveGIF({
for(i in seq(2, simulation.length, 100)){
plot(timeline[1:i],f[1:i], type="l", col="coral1")
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
}
},interval = 0.1, ani.width = 550, ani.height = 350)
animation::saveGIF({
for(i in seq(2, simulation.length, 100)){
plot(timeline[1:i],f[1:i], type="l", col="coral1", ylim = o_range)
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
}
},interval = 0.1, ani.width = 550, ani.height = 350)
for(i in seq(2, simulation.length, 100)){
animation::saveGIF({
for(i in seq(2, simulation.length, 100)){
o_range <- range(f[1:i],g[1:i],g0[1:i],h[1:i],h0[1:i])
plot(timeline[1:i],f[1:i], type="l", col="coral1", ylim = o_range)
lines(timeline[1:i],g0[1:i], col="chartreuse3")
lines(timeline[1:i],g[1:i], col="chartreuse2")
lines(timeline[1:i],h[1:i], col="deepskyblue1")
lines(timeline[1:i],h0[1:i], col="deepskyblue3")
}
},interval = 0.1, ani.width = 550, ani.height = 350)
install.packages('installr')
setwd("~/Documents/Rockefeller Data Site")
shiny::runApp()
